{"version":3,"sources":["presentational/MarkerBoard.js","core/LoopedArrayAccessor.js","core/Note.ts","core/GuitarString.js","presentational/NoteDisplay.js","container/NoteView.js","core/Scale.js","container/NutView.js","presentational/GuitarString.js","container/Fretboard.js","presentational/NoteSelector.js","container/AddTuningModal.js","container/TuningSelector.js","container/ScaleSelector.js","container/ClearSelected.js","container/Settings.js","container/FocusNoteSelector.js","App.js","reducers/tuning.ts","reducers/focusNote.ts","reducers/frets.ts","reducers/reducers.ts","reducers/key.ts","reducers/selectedNotes.ts","sagas/scale-saga.js","index.js"],"names":["MarkerBoard","_ref","frets","react_default","a","createElement","className","Object","toConsumableArray","Array","map","_x","i","key","index","subIndex","Math","floor","some","x","toString","getMarker","LoopedAccessor","array","getAtIndex","indexToUse","length","remainder","noteOrder","getNoteRoot","note","Note","name","classCallCheck","this","sharp","arguments","undefined","toFlatString","flatNoteName","next","concat","fullName","indexOf","halfSteps","noteOrderAccessor","nextIndex","getIndex","nextNoteName","sharpen","GuitarString","root","rootNote","noteAtFret","getColor","focusNote","string","selectedNotes","scaleNotes","noteString","filter","includes","NoteDisplay","_ref2","onClick","_ref2$string","scale","_ref2$selectedNotes","_ref2$scaleNotes","Button","color","NoteView","_this","possibleConstructorReturn","getPrototypeOf","call","handleClick","bind","assertThisInitialized","_this$props","props","_this$props2","NoteDisplay_NoteDisplay","Component","NoteViewConnector","connect","state","tuning","value","dispatch","type","scales","sequence","Scale","noteSequence","startNote","reduce","acc","nextNote","pointInScale","seq","flatten","core_Scale","NutView","n","getClasses","outline","notes","getNotes","guitarString","GuitarStringModel","push","nextProps","setState","src_container_NutView","src_container_NoteView","Fretboard","onNoteClick","reverse","src_presentational_GuitarString","src_presentational_MarkerBoard","noteObjects","NoteSelector","handleNoteSelected","initialState","values","dirty","tuningReducer","action","newValue","updateSelectedNoteInState","updateNameInState","slice","removeStringInState","addString","AddTuningModal","modalOpen","tuningModalOpen","toggleModal","addTuning","_useReducer","useReducer","_useReducer2","slicedToArray","Modal","isOpen","toggle","ModalHeader","ModalBody","Input","invalid","placeholder","onChange","e","target","presentational_NoteSelector","dist","ModalFooter","disabled","TuningSelector","dropdownOpen","dropdownToggle","handleTuningOptionClick","handleTuningChange","_this2","tuningOptions","handleTuningAddClick","react","ButtonGroup","ButtonDropdown","DropdownToggle","caret","DropdownMenu","DropdownItem","container_AddTuningModal","TuningSelectorConnector","ScaleSelectorComponent","targetNote","handleScaleChange","Dropdown","ScaleSelectorConnector","clearDisabled","ClearSelected","SettingsConnector","handleFretsChange","event","parseInt","currentTarget","label","margin","min","FocusNoteSelector","App","src_container_TuningSelector","src_container_Settings","container_FocusNoteSelector","container_ScaleSelector","container_Fretboard","container_ClearSelected","tunings","tuningDefault","focusNoteState","loadedFrets","localStorage","getItem","firstScale","scaleNotesState","combineReducers","setItem","findExisting","findIndex","updateScaleNotes","updateScaleNotesOnFocusNoteChange","setScaleSaga","setFocusNoteSaga","getFocusNote","getScale","regenerator_default","wrap","_context","prev","select","sent","put","stop","_marked","_context2","_marked2","_context3","takeLatest","_marked3","_context4","_marked4","sagaMiddleWare","createSagaMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","run","ReactGA","initialize","debug","location","hostname","pageview","pathname","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.0ddc1b32.chunk.js","sourcesContent":["import React from 'react'\nimport './MarkerBoard.css'\n\nfunction getMarker (index) {\n    if (index === 0) return ''\n\n    const sub = Math.floor(index / 12) * 12\n    const subIndex = index - sub\n\n    if (subIndex === 0) return index\n    const singles = [3, 5, 7, 9]\n\n    const isSingle = singles.some(x => subIndex / x === 1)\n    if (isSingle) return index.toString()\n    return ''\n}\n\nconst MarkerBoard = ({frets}) => (\n    <div className='MarkerBoard'>\n        <div className='nut'></div>\n        {[...Array(frets)].map((_x, i) =>\n            <div className=\"fret\" key={i}>\n                {getMarker(i + 1)}\n            </div>\n        )}\n    </div>\n)\n\nexport default MarkerBoard\n","function LoopedAccessor (array) {\n    return {\n        getAtIndex (index) {\n            if (index < 0) {\n                const indexToUse = array.length + index\n                return array[indexToUse]\n            }\n\n            if (index >= array.length) {\n                let remainder = index % array.length\n                return array[remainder]\n            }\n\n            return array[index]\n        }\n    }\n}\n\nexport default LoopedAccessor\n","import LoopedAccessor from './LoopedArrayAccessor'\n\nconst noteOrder = [\n    'A',\n    'A#',\n    'B',\n    'C',\n    'C#',\n    'D',\n    'D#',\n    'E',\n    'F',\n    'F#',\n    'G',\n    'G#'\n]\n\nfunction isSharp(note) {\n    if (note.length > 1) {\n        return true\n    }\n    return false\n}\n\nfunction getNoteRoot(note) {\n    return note[0]\n}\n\nconst FLAT_CHARACTER = '♭'\nexport default class Note {\n    private sharp: boolean = false\n    constructor(public name) {\n    }\n    sharpen() {\n        this.sharp = true\n        return this\n    }\n    toString(useFlat: boolean = false) {\n        if (useFlat) {\n            return this.toFlatString()\n        }\n        if (this.sharp) {\n            return this.name + '#'\n        }\n        return this.name\n    }\n    toFlatString() {\n        const flatNoteName = this.next()\n        return `${flatNoteName}${FLAT_CHARACTER}`\n    }\n    getIndex() {\n        const fullName = this.toString()\n        return noteOrder.indexOf(fullName)\n    }\n    next(halfSteps = 1) {\n        const noteOrderAccessor = LoopedAccessor(noteOrder)\n\n        const currentIndex = this.getIndex()\n        const nextIndex = currentIndex + halfSteps\n\n        const nextNoteName = noteOrderAccessor.getAtIndex(nextIndex)\n\n        if (isSharp(nextNoteName)) {\n            return new Note(getNoteRoot(nextNoteName)).sharpen()\n        }\n        return new Note(getNoteRoot(nextNoteName))\n    }\n}\n\nexport {\n    noteOrder as notes\n}\n","import Note from './Note'\n\nfunction GuitarString (root, length) {\n    const rootNote = new Note(root)\n    return {\n        root () {\n            return root\n        },\n        noteAtFret (index) {\n            return rootNote.next(index)\n        }\n    }\n}\n\nexport default GuitarString\n","import React from 'react'\nimport {Button} from 'reactstrap'\n\nimport './NoteDisplay.scss'\n\nexport function getColor ({note, focusNote, string, selectedNotes, scaleNotes}) {\n    const noteString = note.toString()\n\n    if (string !== undefined && selectedNotes) {\n        const notesOnThisString = selectedNotes.filter(x => {\n            return x.string === string && x.note === note.toString()\n        })\n        if (notesOnThisString.length > 0) {\n            return 'danger'\n        }\n    }\n\n    if (noteString === focusNote) {\n        return `success`\n    }\n\n    if (scaleNotes) {\n        const notes = scaleNotes\n        const isScaleNote = notes.includes(noteString)\n\n        if (isScaleNote) {\n            return `info`\n        }\n    }\n\n    return ''\n}\n\nexport const NoteDisplay = ({note, focusNote, onClick, scale = [], string = 0, selectedNotes = [], scaleNotes = []}) => (\n    <div className='NoteDisplay'\n        onClick={onClick}>\n        <Button color={getColor({note, focusNote, string, selectedNotes, scaleNotes})}>\n            {note.toString()}\n        </Button>\n    </div>\n)\n","import React, {Component} from 'react'\nimport './NoteView.scss'\nimport {connect} from 'react-redux'\n\nimport {NoteDisplay} from '../presentational/NoteDisplay';\n\nclass NoteView extends Component {\n    constructor () {\n        super()\n\n        this.handleClick = this.handleClick.bind(this)\n    }\n\n    handleClick () {\n        const {note, string} = this.props\n        this.props.onClick(note.toString(), string)\n    }\n\n    render () {\n        const { note, focusNote, scale, string, selectedNotes, scaleNotes } = this.props\n        return (\n            <div className='NoteView'>\n                <div className='note-area'>\n                    <div className='string'></div>\n                    <NoteDisplay\n                        note={note}\n                        scale={scale}\n                        focusNote={focusNote}\n                        scaleNotes={scaleNotes}\n                        string={string}\n                        selectedNotes={selectedNotes}\n                        onClick={this.handleClick}\n                    />\n                    <div className='string'></div>\n                </div>\n                <div className='fret'></div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        tuning       : state.tuning.value,\n        frets        : state.frets,\n        focusNote    : state.focusNote,\n        scale        : state.scale,\n        selectedNotes: state.selectedNotes,\n        scaleNotes   : state.scaleNotes\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onClick (note, string) {\n            dispatch({\n                type : 'SET_SELECTED_NOTE',\n                value: {\n                    note,\n                    string\n                }\n            })\n        }\n    }\n}\n\nconst NoteViewConnector = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(NoteView)\n\nexport default NoteViewConnector\n","import Note from './Note'\nimport {flatten, reduce} from 'ramda'\n\nconst scales = [\n    {\n        name    : 'Major',\n        sequence: [2, 2, 1, 2, 2, 2, 1]\n    },\n    {\n        name    : 'Natural Minor',\n        sequence: [2, 1, 2, 2, 1, 2, 2]\n    },\n    {\n        name    : 'Major Pentatonic',\n        sequence: [2, 2, 3, 2, 3]\n    },\n    {\n        name    : 'Minor Pentatonic',\n        sequence: [3, 2, 2, 3, 2]\n    },\n    {\n        name    : 'Minor Harmonic',\n        sequence: [2, 1, 2, 2, 1, 3, 1]\n    },\n    {\n        name    : 'Diminished',\n        sequence: [2, 1, 2, 1, 2, 1, 2, 1]\n    },\n    {\n        name    : 'Persian Scale',\n        sequence: [1, 3, 1, 1, 2, 3, 1]\n    }\n]\n\nfunction Scale (note, sequence) {\n    return {\n        noteSequence () {\n            const startNote = new Note(note)\n\n            const reductionTarget = {\n                seq         : [],\n                pointInScale: 0\n            }\n\n            const reduced = reduce((acc, i) => {\n                const nextNote = startNote.next(acc.pointInScale)\n                return {\n                    seq         : flatten([acc.seq, [nextNote]]),\n                    pointInScale: acc.pointInScale + i\n                }\n            }, reductionTarget, sequence)\n\n            return reduced.seq\n        }\n    }\n}\n\nexport default Scale\n\nexport {\n    Scale,\n    scales\n}\n","import React, { Component } from 'react'\nimport { Scale } from '../core/Scale'\nimport { connect } from 'react-redux'\nimport {Button} from 'reactstrap'\n\nimport './NutView.scss'\nimport { getColor } from '../presentational/NoteDisplay'\n\nclass NutView extends Component {\n    constructor () {\n        super()\n\n        this.handleClick = this.handleClick.bind(this)\n    }\n\n    getClasses ({ note, selectedNotes, string, scale, focusNote }) {\n        const noteString = note.toString()\n\n        let className = ''\n\n        if (string !== undefined && selectedNotes) {\n            const notesOnThisString = selectedNotes.filter(x => {\n                return x.string === string && x.note === note.toString()\n            })\n            if (notesOnThisString.length > 0) {\n                return `${className} highlight-selected-note`\n            }\n        }\n\n        if (noteString === focusNote) {\n            return `${className} highlight`\n        }\n\n        if (scale && scale) {\n            const notes = Scale(focusNote, scale.sequence).noteSequence().map(n => n.toString())\n            const isScaleNote = notes.includes(noteString)\n\n            if (isScaleNote) {\n                return `${className} highlight-scale-note`\n            }\n        }\n\n        return className\n    }\n\n    handleClick () {\n        const { note, string } = this.props\n        this.props.onClick(note.toString(), string)\n    }\n\n    render () {\n        const { note, selectedNotes, string, focusNote, scale, scaleNotes } = this.props\n        return (\n            <div className='NutView'>\n                <span className={this.getClasses({\n                    note,\n                    selectedNotes,\n                    focusNote,\n                    scale,\n                    string\n                })}\n                onClick={this.handleClick}>\n\n                    <Button outline color={getColor({note, focusNote, string, selectedNotes, scaleNotes})}>\n\n                        {note.toString()}\n                    </Button>\n                </span>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        tuning       : state.tuning.value,\n        frets        : state.frets,\n        focusNote    : state.focusNote,\n        scale        : state.scale,\n        selectedNotes: state.selectedNotes,\n        scaleNotes   : state.scaleNotes\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onClick (note, string) {\n            dispatch({\n                type : 'SET_SELECTED_NOTE',\n                value: {\n                    note,\n                    string\n                }\n            })\n        }\n    }\n}\n\nconst NoteViewConnector = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(NutView)\n\nexport default NoteViewConnector\n","import React, {Component} from 'react'\nimport './GuitarString.css'\n\nimport GuitarStringModel from '../core/GuitarString'\nimport Note from '../core/Note'\n\nimport NoteView from '../container/NoteView'\nimport NutView from '../container/NutView'\n\nclass GuitarString extends Component {\n  state = {\n      notes: []\n  }\n\n  constructor (props) {\n      super(props)\n\n      this.state.notes = this.getNotes({\n          rootNote: this.props.rootNote,\n          frets   : this.props.frets\n      })\n  }\n\n  getNotes ({rootNote, frets}) {\n      const guitarString = GuitarStringModel(rootNote, frets)\n      let notes = []\n      for (let i = 1; i < frets + 1; i++) {\n          notes.push(guitarString.noteAtFret(i))\n      }\n      return notes\n  }\n\n  componentWillReceiveProps (nextProps) {\n      this.setState({\n          notes: this.getNotes({\n              rootNote: nextProps.rootNote,\n              frets   : nextProps.frets\n          })\n      })\n  }\n\n  render () {\n      const {rootNote, string} = this.props\n      return (\n          <div className='GuitarString'>\n              <NutView note={new Note(rootNote)}\n                  string={string}/>\n              {this.state.notes.map((note, index) =>\n                  <NoteView note={note}\n                      string={string}\n                      key={index + note.toString()}/>\n              )}\n          </div>\n      )\n  }\n}\n\nexport default GuitarString\n","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport './Fretboard.css'\n\nimport {reverse} from 'ramda'\n\nimport MarkerBoard from '../presentational/MarkerBoard'\n\nimport GuitarString from '../presentational/GuitarString'\n\nconst Component = ({tuning, frets}) =>\n    <div className='Fretboard noselect'>\n        <div>\n            {reverse(tuning).map((note, i) =>\n                <GuitarString rootNote={note}\n                    frets={frets}\n                    key={i}\n                    string={i}>\n                </GuitarString>\n            )}\n        </div>\n        <MarkerBoard frets={frets}/>\n    </div>\n\nconst mapStateToProps = (state) => {\n    return {\n        tuning: state.tuning.value,\n        frets : state.frets\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onNoteClick (note, string) {\n            dispatch({\n                type : 'SET_SELECTED_NOTE',\n                value: {\n                    note,\n                    string\n                }\n            })\n        }\n    }\n}\n\nconst Fretboard = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Component)\n\nexport default Fretboard\n","import React from 'react'\n\nimport { NoteDisplay } from './NoteDisplay'\nimport Note, { notes } from '../core/Note'\n\nconst noteObjects = notes.map(n => new Note(n))\n\nconst NoteSelector = ({ focusNote, handleNoteSelected }) =>\n    <div className='noselect FocusNoteSelector-notes'>\n        {noteObjects.map((x, i) =>\n            <NoteDisplay\n                key={i.toString()}\n                focusNote={focusNote}\n                note={x}\n                onClick={() => handleNoteSelected(x.toString())} />\n        )}\n    </div>\n\nexport default NoteSelector\n","import React, {useReducer} from 'react'\n\nimport { connect } from 'react-redux'\nimport NoteSelector from '../presentational/NoteSelector'\nimport {Plus, Delete} from 'react-feather'\nimport { Button, Modal, ModalBody, ModalHeader, ModalFooter, Input } from 'reactstrap'\n\nimport './AddTuningModal.scss'\n\nconst initialState = {\n    values: ['A'],\n    name  : '',\n    dirty : false\n}\n\nconst updateSelectedNoteInState = (state, newValue) => {\n    const {note, string} = newValue\n    const {name} = state\n    let values = [...state.values]\n    values[string] = note\n    return {\n        dirty: true,\n        values,\n        name\n    }\n}\n\nconst updateNameInState = (state, newValue) => {\n    const {values} = state\n    return {\n        values,\n        dirty: true,\n        name : newValue\n    }\n}\n\nconst addString = (state) => {\n    const {values, name} = state\n    return {\n        dirty : true,\n        name,\n        values: [...values, 'A']\n    }\n}\n\nconst removeStringInState = (state, string) => {\n    const {name} = state\n    const values = [\n        ...state.values.slice(0, string),\n        ...state.values.slice(string + 1, state.values.length)\n    ]\n    return {\n        name,\n        dirty: true,\n        values\n    }\n}\n\nconst tuningReducer = (state = initialState, action) => {\n    switch (action.type) {\n    case 'SELECT_NOTE_AT_STRING':\n        return updateSelectedNoteInState(state, action.value)\n    case 'UPDATE_NAME':\n        return updateNameInState(state, action.value)\n    case 'REMOVE_STRING':\n        return removeStringInState(state, action.value)\n    case 'RESET':\n        return initialState\n    case 'ADD_STRING':\n        return addString(state)\n    default:\n        return state\n    }\n}\n\nconst TuningModal = ({ modalOpen, toggleModal, addTuning }) => {\n    const [state, dispatch] = useReducer(tuningReducer, initialState)\n\n    const save = () => {\n        toggleModal()\n        addTuning({\n            name : state.name,\n            value: state.values\n        })\n        dispatch({\n            type: 'RESET'\n        })\n    }\n\n    const cancel = () => {\n        dispatch({\n            type: 'RESET'\n        })\n        toggleModal()\n    }\n\n    const inputInvalid = () => {\n        return state.name.length < 1 && state.dirty\n    }\n\n    return (\n        <Modal isOpen={modalOpen} toggle={toggleModal} className='AddTuningModal'>\n            <ModalHeader>\n                Add new Tuning\n            </ModalHeader>\n            <ModalBody>\n                <Input value={state.name}\n                    invalid={inputInvalid()}\n                    placeholder='Name'\n                    onChange={e => dispatch({\n                        type : 'UPDATE_NAME',\n                        value: e.target.value\n                    })}/>\n                {state.values.map((x, string) => <div className='string' key={string}>\n                    <span>String: {string + 1}</span> <NoteSelector\n                        handleNoteSelected={note => dispatch({\n                            type : 'SELECT_NOTE_AT_STRING',\n                            value: { note, string: string }\n                        })}\n                        focusNote={x} />\n                    <Delete className='delete' onClick={() => dispatch({\n                        type : 'REMOVE_STRING',\n                        value: string\n                    })}/>\n                    \n                </div>)}\n                <Button onClick={e => dispatch({\n                    type: 'ADD_STRING'\n                })}>\n                    <Plus />\n                </Button>\n            </ModalBody>\n            <ModalFooter>\n                <Button onClick={cancel}>Cancel</Button>\n                <Button color='info'\n                    disabled={state.name.length < 1}\n                    onClick={save}>\n                    Add\n                </Button>\n            </ModalFooter>\n        </Modal>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        modalOpen: state.tuningModalOpen\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleModal () {\n            dispatch({\n                type: 'TOGGLE_TUNING_MODAL_OPEN'\n            })\n        },\n        addTuning (value) {\n            dispatch({\n                type: 'ADD_TUNING',\n                value\n            })\n        }\n    }\n}\n\nconst AddTuningModal = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(TuningModal)\n\nexport default AddTuningModal\n","import React, { Fragment, Component } from 'react'\n\nimport { connect } from 'react-redux'\n\nimport { DropdownMenu, DropdownItem, DropdownToggle, ButtonGroup, Button, ButtonDropdown } from 'reactstrap'\n\nimport AddTuningModal from './AddTuningModal'\n\nimport {Plus, Edit} from 'react-feather'\n\nimport './TuningSelector.css'\n\nclass TuningSelector extends Component {\n    constructor () {\n        super()\n\n        this.state = {\n            dropdownOpen: false\n        }\n\n        this.dropdownToggle = this.dropdownToggle.bind(this)\n        this.handleTuningOptionClick = this.handleTuningOptionClick.bind(this)\n    }\n\n    dropdownToggle () {\n        this.setState({\n            dropdownOpen: !this.state.dropdownOpen\n        })\n    }\n\n    handleTuningOptionClick (x) {\n        this.props.handleTuningChange(x)\n    }\n\n    render () {\n        const { tuning, tuningOptions, handleTuningAddClick } = this.props\n        return (<Fragment>\n            <ButtonGroup className='TuningSelector-dropdown'>\n                <ButtonDropdown isOpen={this.state.dropdownOpen} toggle={this.dropdownToggle}>\n                    <DropdownToggle caret>\n                        {tuning.name}\n                    </DropdownToggle>\n                    <DropdownMenu>\n                        {tuningOptions.map((x, key) =>\n                            <DropdownItem key={key} onClick={e => this.handleTuningOptionClick(x)}>\n                                {x.name}\n                            </DropdownItem>\n                        )}\n                    </DropdownMenu>\n                </ButtonDropdown>\n                {/* <Button color='info' onClick={handleTuningAddClick}>\n                    <Edit />\n                </Button> */}\n                <Button color='primary' onClick={handleTuningAddClick}>\n                    <Plus />\n                </Button>\n            </ButtonGroup>\n            <AddTuningModal/>\n        </Fragment>)\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        tuningOptions: state.tuningOptions,\n        tuning       : state.tuning\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleTuningChange (tuning) {\n            dispatch({\n                type : 'SET_TUNING',\n                value: tuning\n            })\n        },\n        handleTuningAddClick () {\n            dispatch({\n                type : 'SET_TUNING_MODAL_OPEN',\n                value: true\n            })\n        }\n    }\n}\n\nconst TuningSelectorConnector = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(TuningSelector)\n\nexport default TuningSelectorConnector\n","import { connect } from 'react-redux'\nimport React, { Fragment, Component } from 'react'\n\nimport { scales, Scale } from '../core/Scale'\n\nimport { Dropdown, DropdownMenu, DropdownItem, DropdownToggle } from 'reactstrap'\n\nimport './ScaleSelector.css'\n\nclass ScaleSelectorComponent extends Component {\n    constructor () {\n        super()\n\n        this.state = {\n            dropdownOpen: false\n        }\n\n        this.dropdownToggle = this.dropdownToggle.bind(this)\n    }\n\n    dropdownToggle () {\n        this.setState({\n            dropdownOpen: !this.state.dropdownOpen\n        })\n    }\n\n    render () {\n        const { targetNote, scale, handleScaleChange } = this.props\n\n        const noteSequence = Scale(targetNote, scale.sequence).noteSequence().map((x) => x.toString())\n\n        return (\n            <Fragment>\n                <div className='ScaleSelector-label noselect'>Scale\n                    <Dropdown className='ScaleSelector-selector' isOpen={this.state.dropdownOpen} toggle={this.dropdownToggle}>\n                        <DropdownToggle caret>\n                            {scale.name}\n                        </DropdownToggle>\n                        <DropdownMenu>\n                            {scales.map((x, key) =>\n                                <DropdownItem key={key} onClick={e => handleScaleChange(x)}>\n                                    {x.name}\n                                </DropdownItem>\n                            )}\n                        </DropdownMenu>\n                    </Dropdown>\n                </div>\n\n                <div className='ScaleSelector-sequence'>\n                    {scale.sequence.map((n, key) =>\n                        <span key={key}>{n}</span>\n                    )}\n                </div>\n                <div className='ScaleSelector-sequence'>\n                    {noteSequence.map((n, key) =>\n                        <span key={key}>{n}</span>\n                    )}\n                </div>\n\n            </Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        targetNote: state.focusNote,\n        scale     : state.scale\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleScaleChange (scale) {\n            dispatch({\n                type : 'SET_SCALE',\n                value: scale\n            })\n        }\n    }\n}\n\nconst ScaleSelectorConnector = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ScaleSelectorComponent)\n\nexport default ScaleSelectorConnector\n","import React from 'react'\n\nimport { connect } from 'react-redux'\n\nimport { Button } from 'reactstrap'\n\nconst mapStateToProps = (state) => {\n    return {\n        selectedNotes: state.selectedNotes\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onClick () {\n            dispatch({\n                type: 'CLEAR_SELECTED_NOTES'\n            })\n        }\n    }\n}\n\nfunction clearDisabled (selectedNotes) {\n    if (selectedNotes.length && selectedNotes.length > 0) {\n        return false\n    }\n    return true\n}\n\nconst Component = ({ selectedNotes, onClick }) => (\n    <Button className='ClearSelected'\n        disabled={clearDisabled(selectedNotes)}\n        outline\n        color='danger'\n        onClick={onClick}>\n        Clear Selected\n    </Button>\n)\n\nconst ClearSelected = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Component)\n\nexport default ClearSelected\n","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport {Input} from 'reactstrap'\n\nimport './Settings.css'\n\nconst Settings = ({handleFretsChange, frets}) =>\n    <Input className='Settings'\n        type='number'\n        label='Frets'\n        onChange={handleFretsChange}\n        value={frets}\n        margin='normal'\n        min={12} />\n\nconst mapStateToProps = (state) => {\n    return ({\n        frets: state.frets\n    })\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleFretsChange (event) {\n            dispatch({\n                type : 'SET_FRETS',\n                value: parseInt(event.currentTarget.value, 10)\n            })\n        }\n    }\n}\n\nconst SettingsConnector = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Settings)\n\nexport default SettingsConnector\n","import { connect } from 'react-redux'\nimport React, { Fragment } from 'react'\n\nimport './FocusNoteSelector.css'\nimport NoteSelector from '../presentational/NoteSelector'\n\nconst mapStateToProps = (state) => {\n    return {\n        focusNote: state.focusNote\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleNoteSelected (note) {\n            dispatch({\n                type : 'SET_FOCUS_NOTE',\n                value: note\n            })\n        }\n    }\n}\n\nconst Component = ({focusNote, handleNoteSelected}) =>\n    <Fragment>\n        <div>Focus Note</div>\n        <NoteSelector focusNote={focusNote} handleNoteSelected={handleNoteSelected} />\n    </Fragment>\n\nconst FocusNoteSelector = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Component)\n\nexport default FocusNoteSelector\n","import React from 'react'\nimport './App.scss'\n\nimport Fretboard from './container/Fretboard'\nimport TuningSelector from './container/TuningSelector'\nimport ScaleSelector from './container/ScaleSelector'\nimport ClearSelected from './container/ClearSelected'\nimport Settings from './container/Settings'\nimport FocusNoteSelector from './container/FocusNoteSelector'\n\nconst App = () => (\n    <div className='App'>\n        <div className='App-toolbar'>\n            <h3>\n                Fretboard\n            </h3>\n            <div className='App-toolbar-menu'>\n                <TuningSelector />\n                <Settings />\n            </div>\n        </div>\n\n        <div className='App-pre-fretboard'>\n            <FocusNoteSelector />\n            <ScaleSelector />\n        </div>\n        <div className='App-fretboard-container'>\n            <Fretboard />\n        </div>\n        <div className='App-fretboard-button'>\n            <ClearSelected />\n        </div>\n    </div>\n)\n\nexport default App\n","const tunings = [\n    {\n        name : 'Standard E',\n        value: ['E', 'A', 'D', 'G', 'B', 'E']\n    },\n    {\n        name : 'Standard C',\n        value: ['C', 'F', 'A#', 'D#', 'G', 'C']\n    },\n    {\n        name : 'Standard D',\n        value: ['D', 'G', 'C', 'F', 'A', 'D']\n    },\n    {\n        name : 'Drop C',\n        value: ['C', 'G', 'C', 'F', 'A', 'D']\n    },\n    {\n        name : 'Standard B (7 String)',\n        value: ['B', 'E', 'A', 'D', 'G', 'B', 'E']\n    },\n    {\n        name : 'Bass E',\n        value: ['E', 'A', 'D', 'G']\n    }\n]\n\nconst tuningDefault = {\n    name : 'Standard E',\n    value: ['E', 'A', 'D', 'G', 'B', 'G']\n}\n\nexport function tuning (state = tuningDefault, action) {\n    switch (action.type) {\n    case 'SET_TUNING':\n        state = action.value\n        return state\n    default:\n        return state\n    }\n}\n\nexport function tuningModalOpen (state = false, action) {\n    switch (action.type) {\n    case 'TOGGLE_TUNING_MODAL_OPEN':\n        state = !state\n        return state\n    case 'SET_TUNING_MODAL_OPEN':\n        state = action.value\n        return state\n    default:\n        return state\n    }\n}\n\nexport function tuningOptions (state = tunings, action) {\n    switch (action.type) {\n    case 'ADD_TUNING':\n        return [...state, action.value]\n    default:\n        return state\n    }\n}\n","import {Action} from 'redux'\n\ninterface FocusNoteAction extends Action {\n    value: string\n}\n\nexport const focusNoteState = 'C'\n\nexport default function focusNote (state: string = focusNoteState, action: FocusNoteAction): string {\n    switch (action.type) {\n    case 'SET_FOCUS_NOTE':\n        state = action.value\n        return state\n    default:\n        return state\n    }\n}\n","import {Action} from 'redux'\n\nexport interface FretsAction extends Action {\n    value: number\n}\n\nconst loadedFrets: number = parseInt(localStorage.getItem('frets'), 10) || 24\n\nexport default function frets (state: number = loadedFrets, action: FretsAction): number {\n    switch (action.type) {\n    case 'SET_FRETS':\n        state = action.value\n        localStorage.setItem('frets', state.toString())\n        return state\n    default:\n        return state\n    }\n}\n","import {combineReducers} from 'redux'\n\nimport {tuningOptions, tuning, tuningModalOpen} from './tuning'\nimport focusNote, {focusNoteState} from './focusNote'\nimport selectedNotes from './selectedNotes'\nimport frets from './frets'\nimport key from './key'\n\nimport Scale, {scales} from '../core/Scale'\nimport Note from '../core/Note';\n\nconst [firstScale] = scales\nconst scaleNotesState = Scale(focusNoteState, firstScale.sequence)\n    .noteSequence()\n    .map((n: Note) => n.toString())\n\nfunction scale (state = firstScale, action) {\n    switch (action.type) {\n    case 'SET_SCALE':\n        state = action.value\n        return state\n    default:\n        return state\n    }\n}\n\nfunction scaleNotes (state: Array<string> = scaleNotesState, action): Array<string> {\n    if (action.type === 'SET_SCALE_NOTES') {\n        state = action.value\n        return state\n    }\n    return state\n}\n\nexport default combineReducers({\n    focusNote,\n    frets,\n    key,\n    tuningOptions,\n    tuning,\n    tuningModalOpen,\n    scale,\n    scaleNotes,\n    selectedNotes\n})\n","import {Action} from 'redux'\n\ninterface KeyAction extends Action {\n    value: string\n}\n\nexport default function key (state: string = '', action: KeyAction): string {\n    if (action.type === 'SET_KEY') {\n        state = action.value\n    }\n    return state\n}\n","export default function selectedNotes (state = [], action) {\n    switch (action.type) {\n    case 'SET_SELECTED_NOTE':\n        const { value } = action\n        const findExisting = (i) => {\n            return i.note === value.note && i.string === value.string\n        }\n        const existingIndex = state.findIndex(findExisting)\n        if (existingIndex < 0) {\n            return [...state, value]\n        } else {\n            return state.filter(i => !findExisting(i))\n        }\n    case 'CLEAR_SELECTED_NOTES':\n        return []\n    default:\n        return state\n    }\n}\n","import {put, takeLatest, select} from 'redux-saga/effects'\nimport {Scale} from '../core/Scale'\n\nconst getFocusNote = (state) => state.focusNote\nconst getScale = (state) => state.scale\n\nfunction * updateScaleNotes (action) {\n    const focusNote = yield select(getFocusNote)\n    const notes = Scale(focusNote, action.value.sequence).noteSequence().map(n => n.toString())\n\n    yield put({\n        type : 'SET_SCALE_NOTES',\n        value: notes\n    })\n}\n\nfunction * updateScaleNotesOnFocusNoteChange (action) {\n    const scale = yield select(getScale)\n    const notes = Scale(action.value, scale.sequence).noteSequence().map(n => n.toString())\n\n    yield put({\n        type : 'SET_SCALE_NOTES',\n        value: notes\n    })\n}\n\nfunction * setScaleSaga () {\n    yield takeLatest('SET_SCALE', updateScaleNotes)\n}\n\nfunction * setFocusNoteSaga () {\n    yield takeLatest('SET_FOCUS_NOTE', updateScaleNotesOnFocusNoteChange)\n}\n\nexport {\n    setScaleSaga,\n    setFocusNoteSaga\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {Provider} from 'react-redux'\nimport {createStore, applyMiddleware, compose} from 'redux'\nimport ReactGA from 'react-ga'\n\n// import 'bootstrap/dist/css/bootstrap.min.css'\n// import './nord.css'\nimport './index.scss'\nimport App from './App'\n\nimport reducers from './reducers/reducers'\nimport { setScaleSaga, setFocusNoteSaga } from './sagas/scale-saga'\nimport createSagaMiddleware from 'redux-saga'\n\nconst sagaMiddleWare = createSagaMiddleware()\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nlet store = createStore(\n    reducers,\n    composeEnhancers(applyMiddleware(sagaMiddleWare))\n)\nsagaMiddleWare.run(setScaleSaga)\nsagaMiddleWare.run(setFocusNoteSaga)\n\nReactGA.initialize('UA-113213939-1', {\n    debug: (window.location.hostname !== 'dvisagie.com')\n})\nReactGA.pageview(window.location.pathname)\n\nReactDOM.render(\n\n    <Provider store={store}>\n        <App />\n    </Provider>\n    ,\n    document.getElementById('root'))\n"],"sourceRoot":""}